#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/shared.sh"

installer_download() {
  local url=$1
  local filename=$2
  local output_path="/tmp/${filename}"

  curl -L "$url" -o "$output_path"

  echo $output_path
  return 0
}

mount_dmg() {
  local dmg_path=$1
  local mount_path=$(
    (yes | hdiutil attach -noautoopen "$dmg_path") | \
      grep 'Volumes' |
      awk '{ n=split($0, a, /[[:space:]]{2,}/); print a[n] }'
  )

  echo "$mount_path"
  return 0
}

unmount_dmg() {
  hdiutil detach "$1" >/dev/null
}

app_installed() {
  test -e "/Applications/$1.app"
}

run_program_and_wait() {
  local installer_path=$1
  open -W "$installer_path"
}

run_installer_pkg() {
  local pkg_path=$1
  sudo installer -pkg "$pkg_path" -target /
}

downloading_msg() {
  dotsay "@b@blue[[+ Downloading and installing $1]]"
}

already_installed_msg() {
  dotsay "+ $name already installed"
}

install_dmg_with_installer() {
  local name=$1
  local url=$2
  local installer_path=$3

  if ! app_installed "$name"; then
    dotsay "@blue@b[[+ Installing $name]]"

    downloading_msg "$name"

    local dmg_path=$(installer_download "$url" "$name.dmg")
    local mount_path=$(mount_dmg "$dmg_path")

    run_program_and_wait "$mount_path/$installer_path"

    unmount_dmg "$mount_path"
    rm -fr $dmg_path
  else
    already_installed_msg "$name"
  fi
}

install_simple_dmg_copy() {
  local name=$1
  local url=$2

  if ! app_installed "$name"; then
    dotsay "@blue@b[[+ Installing $name]]"

    local dmg_path=$(installer_download "$url" "$name.dmg")
    local mount_path=$(mount_dmg "$dmg_path")
    local app_to_copy="$mount_path/$name.app"

    cp -r "$app_to_copy" /Applications

    unmount_dmg "$mount_path"
    rm -fr $dmg_path
  else
    already_installed_msg "$name"
  fi
}

install_simple_zip() {
  local name=$1
  local url=$2

  if ! app_installed "$name"; then
    dotsay "@blue@b[[+ Installing $name]]"

    local zip_path=$(installer_download "$url" "$name.zip")

    unzip -d /Applications "$zip_path"

    rm -fr $zip_path
  else
    already_installed_msg "$name"
  fi
}

install_inception_zip() {
  local name=$1
  local url=$2

  if ! app_installed "$name"; then
    dotsay "@blue@b[[+ Installing $name]]"

    local zip_path=$(installer_download "$url" "$name.zip")
    local tmp_directory=$(mktemp -d -t 'dotfiles')

    unzip -d "$tmp_directory" "$zip_path" >/dev/null

    dmg_path=$(
      find -E "$tmp_directory" \
        -not -path '*/\.*' \
        -iregex "\/[[:alpha:][:digit:]]+.*\.dmg$"
    )

    local mount_path=$(mount_dmg "$dmg_path")
    local app_to_copy="$mount_path/$name.app"

    cp -r "$app_to_copy" /Applications

    unmount_dmg "$mount_path"

    rm -fr $zip_path
    rm -fr $tmp_directory
  else
    already_installed_msg "$name"
  fi
}

install_pkg() {
  local name=$1
  local url=$2

  if ! app_installed "$name"; then
    local pkg_path=$(installer_download "$url" "$name.pkg")

    run_installer_pkg "$pkg_path"
    rm -fr $pkg_path
  else
    already_installed_msg "$name"
  fi
}

install_1password() {
  local url="https://app-updates.agilebits.com/download/OPM7"
  install_pkg "1Password 7" "$url"
}

#install_alfred() {
#  local url="https://cachefly.alfredapp.com/Alfred_3.5.1_883.dmg"
#  install_simple_dmg_copy "Alfred 3" "$url"
#}
#
#install_bartender() {
#  local url="https://www.macbartender.com/Demo/Bartender%203.zip"
#  install_simple_zip "Bartender 3" "$url"
#}
#
#install_better_touch_tool() {
#  local url="https://www.boastr.net/releases/BetterTouchTool.zip"
#  install_simple_zip "BetterTouchTool" "$url"
#}

install_dash() {
  local url="https://sanfrancisco.kapeli.com/downloads/v4/Dash.zip"
  install_simple_zip "Dash" "$url"
}

install_dropbox() {
  local url="https://www.dropbox.com/download?plat=mac"
  install_dmg_with_installer "Dropbox" "$url" "Dropbox.app"
}

install_firefox() {
  local url="https://download.mozilla.org/?product=firefox-latest-ssl&os=osx&lang=en-US"
  install_simple_dmg_copy "Firefox" "$url"
}

install_google_chrome() {
  local url="https://dl.google.com/chrome/mac/stable/GGRO/googlechrome.dmg"
  install_simple_dmg_copy "Google Chrome" "$url"
}

install_licecap() {
  local url="https://www.cockos.com/licecap/licecap125.dmg"
  install_simple_dmg_copy "LICEcap" "$url"
}

install_signal() {
  local url="https://updates.signal.org/desktop/Signal-mac-1.0.39.zip"
  install_simple_zip "Signal" "$url"
}

install_splice() {
  local url="https://s3-us-west-1.amazonaws.com/splicedesktop/install/stable/Splice.dmg"
  install_dmg_with_installer "Splice" "$url" "Splice Installer.app"
}

install_vlc() {
  local url="https://mirror.sfo12.us.leaseweb.net/videolan/vlc/3.0.3/macosx/vlc-3.0.3.dmg"
  install_simple_dmg_copy "VLC" "$url"
}

dotheader "Setting up custom Mac apps"

install_1password
install_dash
install_dropbox
install_firefox
install_google_chrome
install_licecap
install_signal
install_splice
install_vlc