#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/shared.sh"

require_installer package-manager

export PYTHON_CONFIGURE_OPTS="--enable-framework"

export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

function load_pyenv() {
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
}

function install_python_versions() {
  CFLAGS="-I$(brew --prefix readline)/include -I$(brew --prefix openssl)/include -I$(xcrun --show-sdk-path)/usr/include" \
  LDFLAGS="-L$(brew --prefix readline)/lib -L$(brew --prefix openssl)/lib" \
  PYTHON_CONFIGURE_OPTS=--enable-unicode=ucs2 \
  pyenv install -s 2.7.13

  CFLAGS="-I$(brew --prefix readline)/include -I$(brew --prefix openssl)/include -I$(xcrun --show-sdk-path)/usr/include" \
  LDFLAGS="-L$(brew --prefix readline)/lib -L$(brew --prefix openssl)/lib" \
  PYTHON_CONFIGURE_OPTS=--enable-unicode=ucs2 \
  pyenv install -v 3.7.0

  pyenv global 2.7.13
}

function install_pyenv_virtualenvs() {
  if [ ! -d $(pyenv root)/plugins/pyenv-virtualenv ]; then
    git clone https://github.com/yyuu/pyenv-virtualenv.git \
      $(pyenv root)/plugins/pyenv-virtualenv
  fi

  if ! pyenv virtualenvs | grep -q py2neovim; then
    pyenv virtualenv 2.7.13 py2neovim
    pyenv activate py2neovim
    pip install neovim
  fi

  if ! pyenv virtualenvs | grep -q py3neovim; then
    pyenv virtualenv 3.6.2 py3neovim
    pyenv activate py3neovim
    pip install neovim
  fi
}

function install_pyenv() {
  if ! command_exists "pyenv"; then
    curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
  fi
}

function install_pyenv_virtualenv() {
  local plugin_path="$(pyenv root)/plugins/pyenv-virtualenv"

  if [ ! -d "$plugin_path" ]; then
    git clone https://github.com/pyenv/pyenv-virtualenv.git "$plugin_path"
  fi
}

dotheader "Setting up Python..."

install_pyenv
install_pyenv_virtualenv

echo
echo $PATH
echo

load_pyenv
install_python_versions
install_pyenv_virtualenvs